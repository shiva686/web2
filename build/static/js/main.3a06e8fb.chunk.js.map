{"version":3,"sources":["logo.svg","Nav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","props","useState","useEffect","window","addEventListener","navbar","document","getElementById","sticky","offsetTop","pageYOffset","classList","add","remove","scrollY","active","getElementsByClassName","i","length","current","className","replace","this","id","activeClassName","activeStyle","color","fontWeight","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","spy","smooth","duration","App","name","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3a06e8fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React , { Component , useEffect , useState }from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport{ Link, Element }from'react-scroll'\r\nconst  Nav = (props) =>{\r\n\r\n     let [scrolled, changescrolled] = useState();\r\n\r\n\t useEffect(() => {\r\n\r\n             window.addEventListener('scroll' , () =>{\r\n\r\n             let navbar = document.getElementById(\"nav\");\r\n             let sticky = navbar.offsetTop;\r\n             if (window.pageYOffset >= sticky) {\r\n                navbar.classList.add(\"sticky\")\r\n              } else {\r\n              navbar.classList.remove(\"sticky\");\r\n              }\r\n               const scroll = window.scrollY  < 130;\r\n               if(scroll !== true)\r\n               {\r\n                navbar.classList.add(\"stickyd\")\r\n               }\r\n               else{\r\n            \tnavbar.classList.remove(\"stickyd\");\r\n               }\r\n\r\n        });\r\n   \r\n\r\n        let active = document.getElementsByClassName('nav-link');\r\n\r\n\r\n        for (let i = 0; i < active.length; i++) {\r\n           \r\n\r\n            active[i].addEventListener(\"click\", function() {\r\n          \r\n             let current = document.getElementsByClassName(\"active\");\r\n\r\n                // If there's no active class\r\n\r\n                     if (current.length > 0) {\r\n                     for(let i = 0; i < current.length; i++){\r\n                       current[i].className = current[i].className.replace(\" active\", \"\");\r\n                       \r\n                     } \r\n                  }                   \r\n                    // Add the active class to the current/clicked button\r\n                 this.className += \" active\";\r\n             \r\n               });\r\n\r\n              }\r\n       });\r\n\t\r\n\t const activeStyle = {\r\n\t \tcolor:'white'\r\n\t }\r\n\t const style ={\r\n\t \tcolor:'white'\r\n\t }\r\n\r\n\r\n\treturn(  \r\n         <>\r\n           <div id = \"nav\" className = \"navs\">\r\n           <div className = \"container \">\r\n           <nav id=\"navbar\" className=\"navbar navbar-dark light navbar-expand-md  \">\r\n           <NavLink className=\"navbar-brand text-capitalize\" activeClassName=\"navlogo\" activeStyle = {{color:'white' , fontWeight:'bold'}} to =\"/\">your logo</NavLink>\r\n           <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n           <span className=\"navbar-toggler-icon\"></span>\r\n           </button>\r\n           <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n           <ul className=\"navbar-nav ml-auto\">\r\n           <li className=\"nav-item\">\r\n           <Link  className=\"nav-link  text-capitalize home\" href = \"\" to = \"home\" spy={true} smooth={true} duration={500}  >Home </Link>\r\n           </li>\r\n           <li className=\"nav-item \">\r\n           <Link   className=\"nav-link text-capitalize service\" href = \"\" to = \"service\"  spy={true} smooth={true} duration={500}>Service</Link>\r\n           </li>\r\n           <li className=\"nav-item\">\r\n           <Link   className=\"nav-link text-capitalize about\" href = \"\" to = \"about\"  spy={true} smooth={true} duration={500} >about</Link>\r\n           </li>\r\n           <li className=\"nav-item\">\r\n           <Link   className=\"nav-link text-capitalize contact\" href = \"\" to = \"contact\" spy={true} smooth={true} duration={500} >contact</Link>\r\n           </li>\r\n           </ul>\r\n           </div>\r\n           </nav>\r\n           </div>\r\n           </div>\r\n          \r\n         </>\r\n\t\t);\r\n\r\n}\r\n\r\n\r\n\r\nexport default Nav;","import React,{useEffect }from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap.bundle';\nimport  Nav from './Nav.js'\nimport{ Link, Element }from'react-scroll'\n\n\nfunction App() {\n    \n\n  const style = {\n    \"padding\":'0px',\n    \"margin\":'0px'  }\n\n  return (\n   < >\n     <div id=\"home\" className = \"bgb \" >\n     <Nav/>\n     <div className = \"bgbv content\" >\n         <div className =\"content\">\n         <h1  className=\"text-center wt text-capitalize\"> website name </h1>\n         <p className=\"text-center cp text-capitalize\">caption</p>\n        </div>\n     </div>\n     </div>\n\n     <div className=\"container\">\n      <div name=\"service\" className=\"element\">\n        <Element className=\"row vh\">\n           <div className=\"col-md-6\" >\n               <h1 className = \"text-capitalize\">service</h1>\n              <p>Nulla do sit occaecat quis ut aliquip dolor dolore eiusmod elit proident sint exercitation duis aliquip et aliqua in labore consequat est in sit voluptate cupidatat nostrud eiusmod ut ut dolore pariatur sint eiusmod duis cillum et reprehenderit id excepteur quis ex ex dolor ut cillum voluptate consequat do occaecat laborum nisi veniam laborum magna magna sint pariatur sunt nostrud quis deserunt eiusmod aliqua eu nisi voluptate aute et cupidatat commodo anim aliquip duis est quis est irure tempor velit deserunt duis exercitation in incididunt in eu aliqua dolore culpa cupidatat eiusmod fugiat consectetur ea reprehenderit enim occaecat anim ex commodo qui consequat ad non nisi est sunt labore reprehenderit minim ut exercitation ullamco minim ex adipisicing nostrud et ut elit commodo veniam reprehenderit sunt tempor dolore mollit duis dolor reprehenderit ut magna cupidatat nulla adipisicing aliqua esse ut eu consequat proident tempor aute proident magna ut ad commodo id exercitation eu commodo exercitation amet in ex nisi eu dolore qui irure magna tempor et irure incididunt magna eiusmod sed aliqua incididunt aliqua eu laborum deserunt enim magna cillum enim in nostrud ea duis sint in id laboris esse in amet id ad sit aute nulla ut.</p>\n           </div>\n           \n        </Element>\n      </div>\n      <Element name=\"about\" className=\"element\">\n         <div className=\"row vh\">\n           <div className=\"col-md-6\">\n             <h1 className = \"text-capitalize\">about us</h1>\n             <p>Nulla do sit occaecat quis ut aliquip dolor dolore eiusmod elit proident sint exercitation duis aliquip et aliqua in labore consequat est in sit voluptate cupidatat nostrud eiusmod ut ut dolore pariatur sint eiusmod duis cillum et reprehenderit id excepteur quis ex ex dolor ut cillum voluptate consequat do occaecat laborum nisi veniam laborum magna magna sint pariatur sunt nostrud quis deserunt eiusmod aliqua eu nisi voluptate aute et cupidatat commodo anim aliquip duis est quis est irure tempor velit deserunt duis exercitation in incididunt in eu aliqua dolore culpa cupidatat eiusmod fugiat consectetur ea reprehenderit enim occaecat anim ex commodo qui consequat ad non nisi est sunt labore reprehenderit minim ut exercitation ullamco minim ex adipisicing nostrud et ut elit commodo veniam reprehenderit sunt tempor dolore mollit duis dolor reprehenderit ut magna cupidatat nulla adipisicing aliqua esse ut eu consequat proident tempor aute proident magna ut ad commodo id exercitation eu commodo exercitation amet in ex nisi eu dolore qui irure magna tempor et irure incididunt magna eiusmod sed aliqua incididunt aliqua eu laborum deserunt enim magna cillum enim in nostrud ea duis sint in id laboris esse in amet id ad sit aute nulla ut.</p>\n           </div>\n          \n        </div>\n      </Element>\n      <Element name=\"contact\" className=\"element\">\n        <div className=\"row vh\">\n           <div className=\"col-md-6\">\n             <h1 className = \"text-capitalize\">contact us</h1>\n               \n               <form className = 'form-cos'>\n                  <label className=\"text-capitalize \">email</label>\n                  <br/>\n                  <input type=\"email\" name=\"email\" className=\"email\"/>\n                   <br/>\n                  <label className=\"text-capitalize \">password</label>\n                  <br/>\n                  <input type=\"password\" name=\"email\" className=\"password\"/>\n                   <br/>\n                  <label className=\"text-capitalize \">message</label>\n                  <br/>\n                  <textarea type=\"textarea\" name=\"email\" className=\"textarea\"/>\n                  <br/>\n                  <button type=\"submit\" name=\"submit\" className=\"submit btn-primary\">submit</button>\n               </form>\n\n           </div>\n          \n        </div>\n      </Element>\n     </div>\n\n\n   </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}